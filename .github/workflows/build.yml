name: Build

on:
  # Only run builds on release tags
  push:
    tags:
      - 'v*'
  # Allow manual trigger for testing
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build - ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: Linux-x86_64
            os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - name: Windows-x86_64
            os: windows-latest
            rust_target: x86_64-pc-windows-msvc
          - name: macOS-x86_64
            os: macos-latest
            rust_target: x86_64-apple-darwin
          - name: macOS-aarch64
            os: macos-latest
            rust_target: aarch64-apple-darwin

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.platform.rust_target }}

    - name: Install Linux dependencies
      if: matrix.platform.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgtk-3-dev \
          libwebkit2gtk-4.1-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev \
          libssl-dev \
          libxdo-dev \
          patchelf

    - name: Install frontend dependencies
      run: npm install

    - name: Build Tauri app
      run: npm run tauri build -- --target ${{ matrix.platform.rust_target }}

    - name: Upload Linux artifacts
      if: matrix.platform.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: pasta-${{ matrix.platform.name }}
        path: |
          src-tauri/target/${{ matrix.platform.rust_target }}/release/bundle/deb/*.deb
          src-tauri/target/${{ matrix.platform.rust_target }}/release/bundle/rpm/*.rpm
          src-tauri/target/${{ matrix.platform.rust_target }}/release/bundle/appimage/*.AppImage

    - name: Upload Windows artifacts
      if: matrix.platform.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: pasta-${{ matrix.platform.name }}
        path: |
          src-tauri/target/${{ matrix.platform.rust_target }}/release/bundle/msi/*.msi
          src-tauri/target/${{ matrix.platform.rust_target }}/release/bundle/nsis/*.exe

    - name: Upload macOS artifacts
      if: matrix.platform.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: pasta-${{ matrix.platform.name }}
        path: |
          src-tauri/target/${{ matrix.platform.rust_target }}/release/bundle/dmg/*.dmg
          src-tauri/target/${{ matrix.platform.rust_target }}/release/bundle/macos/*.app.tar.gz
          src-tauri/target/${{ matrix.platform.rust_target }}/release/bundle/macos/*.app