name: Rust Code Coverage

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'src-tauri/**'
      - '.github/workflows/coverage.yml'
      - 'src/**'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  coverage:
    name: Generate Coverage Report
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: ${{ matrix.rust }}
        components: llvm-tools-preview
    
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v4
      with:
        path: src-tauri/target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install tarpaulin
      if: matrix.os == 'ubuntu-latest'  # Tarpaulin only works on Linux
      run: cargo install cargo-tarpaulin
    
    - name: Run tests (non-Linux)
      if: matrix.os != 'ubuntu-latest'
      working-directory: ./src-tauri
      run: cargo test --lib -- --skip clipboard::tests
    
    - name: Generate coverage report (Linux only)
      if: matrix.os == 'ubuntu-latest'
      working-directory: ./src-tauri
      run: |
        cargo tarpaulin \
          --lib \
          --out Xml \
          --out Html \
          --exclude-files "*/main.rs" \
          --exclude-files "*/build.rs" \
          --exclude-files "*/tests/*" \
          --exclude-files "*/clipboard.rs" \
          --skip-clean \
          --workspace
    
    - name: Upload coverage reports to Codecov
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./src-tauri/cobertura.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Upload coverage artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: src-tauri/tarpaulin-report.html
        retention-days: 30
    
    - name: Coverage summary
      if: matrix.os == 'ubuntu-latest'
      working-directory: ./src-tauri
      run: |
        echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY
        echo "Coverage report has been generated and uploaded." >> $GITHUB_STEP_SUMMARY
        echo "- View the HTML report in the artifacts section" >> $GITHUB_STEP_SUMMARY
        echo "- Codecov will comment on the PR with detailed coverage" >> $GITHUB_STEP_SUMMARY