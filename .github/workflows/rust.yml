name: Rust CI

on:
  push:
    branches: [main]
    paths:
      - 'src-tauri/**'
      - 'src/**'
      - '.github/workflows/rust.yml'
  pull_request:
    branches: [main]
    paths:
      - 'src-tauri/**'
      - 'src/**'
      - '.github/workflows/rust.yml'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgtk-3-dev \
          libwebkit2gtk-4.1-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev \
          libssl-dev

    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          src-tauri/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Run cargo fmt
      working-directory: ./src-tauri
      run: cargo fmt -- --check

    - name: Run cargo clippy
      working-directory: ./src-tauri
      run: cargo clippy -- -D warnings

    - name: Build
      working-directory: ./src-tauri
      run: cargo build --verbose

    - name: Run tests
      working-directory: ./src-tauri
      run: cargo test --lib --verbose

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgtk-3-dev \
          libwebkit2gtk-4.1-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev \
          libssl-dev

    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          src-tauri/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Generate coverage report
      working-directory: ./src-tauri
      run: |
        cargo tarpaulin \
          --lib \
          --out Xml \
          --exclude-files "*/main.rs" \
          --exclude-files "*/build.rs" \
          --exclude-files "*/tests/*" \
          --exclude-files "*/clipboard.rs" \
          --skip-clean \
          --workspace \
          --timeout 120

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./src-tauri/cobertura.xml
        flags: unittests
        name: rust-coverage
        fail_ci_if_error: false