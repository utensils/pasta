name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release'
        required: false
        default: 'v0.0.0-dev'

env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

jobs:
  build-and-release:
    name: Build and Release - ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: Linux-x86_64
            os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - name: Windows-x86_64
            os: windows-latest
            rust_target: x86_64-pc-windows-msvc
          - name: macOS-x86_64
            os: macos-latest
            rust_target: x86_64-apple-darwin
          - name: macOS-aarch64
            os: macos-latest
            rust_target: aarch64-apple-darwin

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.platform.rust_target }}

    - name: Install Linux dependencies
      if: matrix.platform.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgtk-3-dev \
          libwebkit2gtk-4.1-dev \
          libayatana-appindicator3-dev \
          librsvg2-dev \
          libssl-dev \
          libxdo-dev \
          patchelf

    - name: Install frontend dependencies
      run: npm install

    - name: Build Tauri app
      uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: ${{ github.event.inputs.tag_name || github.ref_name }}
        releaseName: 'Pasta ${{ github.event.inputs.tag_name || github.ref_name }}'
        releaseBody: 'See the assets to download this version and install.'
        releaseDraft: true
        prerelease: false
        args: --target ${{ matrix.platform.rust_target }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pasta-${{ matrix.platform.name }}
        path: |
          src-tauri/target/${{ matrix.platform.rust_target }}/release/bundle/**/*

  publish-crate:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: build-and-release
    # Only publish on actual version tags, not manual dispatches
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    
    - name: Publish to crates.io
      working-directory: ./src-tauri
      run: |
        # Verify the package builds
        cargo build --release
        # Publish to crates.io
        cargo publish --no-verify